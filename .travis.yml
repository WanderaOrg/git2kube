language: go
go:
- "1.12.5"
- "master"

notifications:
  email:
    on_success: never
    on_failure: always

matrix:
  # It's ok if our code fails on unstable development versions of Go.
  allow_failures:
  - go: master
  # Don't wait for tip tests to finish. Mark the test run green if the
  # tests pass on the stable versions of Go.
  fast_finish: true

env:
- GO111MODULE=on

install:
- go get -u golang.org/x/lint/golint

script:
  - go test -v ./...
  - go vet -v ./...
  - golint -set_exit_status $(go list ./...)
  - |
    if [ -n "$(gofmt -s -l $(find . -type f -name '*.go'))" ]; then
        echo "Go code is not formatted:"
        gofmt -s -d -e $(find . -type f -name '*.go')
        exit 1
    fi

before_deploy:
  - PLATFORMS=(darwin/amd64 freebsd/amd64 linux/amd64 windows/amd64)

 # build binary for all archs
  - |
    for PLATFORM in "${PLATFORMS[@]}"; do
      echo "Building $PLATFORM"
      GOOS=${PLATFORM%/*}
      GOARCH=${PLATFORM#*/}
      if [ "$GOOS" = "windows" ]; then
        build_cmd="GOOS=$GOOS GOARCH=$GOARCH go build -o git2kube -ldflags '-w -s -X 'github.com/wandera/git2kube/cmd.Version=${TRAVIS_TAG}"
      else
        build_cmd="CGO_ENABLED=0 GOOS=$GOOS GOARCH=$GOARCH go build -o git2kube -ldflags '-w -s -X 'github.com/wandera/git2kube/cmd.Version=${TRAVIS_TAG}"
      fi
      if ! eval $build_cmd; then
        echo "Failed building sample for $PLATFORM" && return 1
      fi
      if [ "$GOOS" = "windows" ]; then
        zip git2kube-${GOOS}-${GOARCH}.zip git2kube
      else
        tar cvzf git2kube-${GOOS}-${GOARCH}.tgz git2kube
      fi
    done
  - ls

deploy:
  provider: releases
  api_key:
    secure: E7uRfHkaPKSeWn0UN/NzOOqWLgzJPgUhENL3MJdGXxoscFLLtsZIYmuY7ffwyu46BG34caI3yyDSXPqu9M0M3SPif7pTu2Uw8quqaX7dTJoS7DCFWWCAiqkdSUmLXQAC92AsjiOVQN5hu4QcYaUzNO6p9wWgWGXCShVTSCt71sGM7iW8ur+DcfUrvWsnek5/UrBVgGJNA135jpKxaiE11NUpOEHlUUTJ5aXjyCINTmSVCs4f2wakHQA7KtdhWoj1RPa4DBxBhzYSOLwDKsRDXY432F7mE2li8gM/KxUS5YydKWP5HQVWEiF2Go7jXPqMSkIfyelBsZQCCoypdZPRXr+h9mik4DI6QnM27BY3wQr/t1v/oquFj+U59m4IlBkU7sGsuABMEkAF5mvVn1CYayg8dOxagO2Iz1hp0t3XGtp6nfXuT9eOKLl7MSv8KgLJfLADxsgs/sw3tTVigX3plI/T7ua0RaXg1rsuJ9liPO6zO6PTaTw2SDtZ+ueQwSuES/Ae/BCwGu4tKw9CAi3ezNSAadOgQjvi1Bh66KJSurrAk9ZDrXUB4Bz3ruJrJg9KnQPFuLrtL2dvMRITx6v5VEuvhbk4bzrerftDCc1pz6TwWUS13SAzxKKZwp0pmCAmCu2TRE95k6YMMXlLVWLZ1ASeUrhXZACLk3fppSIuDCk=
  file:
    - "git2kube-darwin-amd64.tgz"
    - "git2kube-freebsd-amd64.tgz"
    - "git2kube-linux-amd64.tgz"
    - "git2kube-windows-amd64.zip"
  skip_cleanup: true
  on:
    tags: true
